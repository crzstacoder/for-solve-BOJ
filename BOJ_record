#this is BOJ recording file.
#start at the bottom,
#start in Bronze 2

#더하기 사이클

# def cycle(a) :
#     b = list(a)
#     global cnt
#     cnt = 0
#     while True :
#         if len(b) == 1 :
#             b = ['0',b[0]]
#         else :
#             pass
#         bn = int(b[0]) + int(b[1])
#         b = list(b[1] + str(bn%10))
        
#         if int(b[0]+b[1])==int(a):
#             cnt += 1
#             print(cnt)
#             break
#         else :
#             cnt += 1
        
#     return
# num = input()
# cycle(num)

# 더하기 사이클 성공

#최댓값
# num = []
# for i in range(9) :                         #숫자 리스트
#     num.append(int(input()))

# for j in range(9) :
#     if num[j] == max(num) :
#         print(max(num))
#         print(j+1)
#         break
#     else :
#         pass

#최댓값 성공

#평균 (세준이가 기말 망쳐서 점수조작하는 문제)

# import sys
# num = int(input())
# score = list(map(float,sys.stdin.readline().split()))
# m = max(score)
# newscore = []
# total = 0
# for i in range(num) :
#     newscore.append(score[i]/m*100)
# for j in range(num) :
#     total += newscore[j]
# print(total/num)

# 평균 성공

#평균은 넘겠지

# import sys

# count = 0
# total = 0
# avg = 0
# num = int(input())
# for i in range(num) :
#     b=list(map(int,sys.stdin.readline().split()))
#     for j in range(1,b[0]+1) :
#         total += b[j]
#         if j == b[0] :
#             avg = total/b[0]
#             total = 0
#     for k in range(1,b[0]+1) :
#         if b[k] > avg :
#             count += 1
#         else :
#             pass
#     print(format(((count/b[0])*100),".3f")+"%")
#     avg = 0
#     count = 0

#평균은 넘겠지 성공

# #셀프넘버
# li = []
# for i in range(1,10001) :
#     li.append(i)
# for j in range(10000) :
#     if j//10 == 0  :
#         li.pop(j+j)
#     elif len(str(j)) == 2 :
#         li.pop(i+(i//10)+(i%10))
#     elif len(str(j)) == 3 :
#         li.pop(i+(i//100)+(i%100//10)+(i%10))
#     elif len(str(j)) == 4 :
#         li.pop(i+(i//1000))+(i%1000//100)+(i%100//10)+(i%10)
# for k in range(len(li)) :
#     print(li[k])
# 셀프넘버 실패

#셀프넘버2트

# def self(a) :
#     global selfnum
#     selfnum =[]
#     for i in range(10000) :
#     n = a
#     a = list(input())
#     if len(n) == 1 :
#         n += n + n[0]
#         selfnum.pop(n)
#     elif len(n) ==2 :
#         n += n + n[0] + n[1]
#         selfnum.pop(n)
#     elif len(n) == 3 :
#         n += n + n[0] + n[1] + n[2]
#         selfnum.pop(n)
#     elif len(n) == 4 :
#         n += n + n[0] + n[1] + n[2] + n[4]
#         selfnum.pop(n)
#     return


# cnt = 0
# for i in range(1, 10001) :
#     selfnum.append(i)
# total = 0
# while True :
#     if cnt >= 10000 :
#         for i in range(len(selfnum)) :
#             print(selfnum[i])
#             break
#     self()


#셀프넘버 실패

#셀프넘버 3트 ( 도움 )

# def d(n) :
#     rst = n
#     while n!=0 :
#         rst = n%10
#         n//=10
#     return rst

#     N = 10000 +1
#     for i in range(1,N)


# mt_list = [i for i in range(10)]

# self_n = [True for _ in range(N)]

# def d(n):
#     rst = n
#     while n!=0 :
#         rst += n%10
#         n//=10
#     return rst

# N=10001
# self_num = [True for _ in range(N)]
# for i in range(1,N) :
#     rst = d(i)
#     if rst < N :
#         self_num[rst]=False
# for i in range(1, N):
#     if self_num[i] :
#         print(i)

#셀프넘버 성공

#한수(도움)
# def hansu(n) :
#     if n < 100 :
#         return True
#     if n == 1000 :
#         return False
#     n1 = n%10
#     n//=10
#     n2 = n%10
#     n3 = n//10

#     if n3 - n2 == n2 - n1 :
#         return True
#     else :
#         return False
# N = int(input())
# cnt = 0
# for i in range(1, N+1) :
#     if hansu(i) :
#         cnt += 1
#     else :
#         pass

# print(cnt)

#한수 성공

#아스키 코드

# a = input()
# print(ord("{}".format(a)))

#아스키 코드 성공

#팩토리얼

n=1
a = int(input())
if a == 0 :
    print(1)
else :
    for i in range(1,a+1) :
        if i == a :
            n*=i
            print(n)
            break
        else :
            n*=i
            
# 팩토리얼 성공


